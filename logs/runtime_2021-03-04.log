2021-03-05 at 09:03:42 | ERROR | An error has been caught in function 'run', process 'MainProcess' (14881), thread 'ThreadPoolExecutor-0_4' (123145521741824):
Traceback (most recent call last):

  File "/usr/local/Cellar/python@3.8/3.8.4/Frameworks/Python.framework/Versions/3.8/lib/python3.8/threading.py", line 890, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x1084f01f0>
    └ <Thread(ThreadPoolExecutor-0_4, started daemon 123145521741824)>
  File "/usr/local/Cellar/python@3.8/3.8.4/Frameworks/Python.framework/Versions/3.8/lib/python3.8/threading.py", line 932, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x1084edee0>
    └ <Thread(ThreadPoolExecutor-0_4, started daemon 123145521741824)>
  File "/usr/local/Cellar/python@3.8/3.8.4/Frameworks/Python.framework/Versions/3.8/lib/python3.8/threading.py", line 870, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(ThreadPoolExecutor-0_4, started daemon 123145521741824)>
    │    │        │    └ (<weakref at 0x125746bd0; to 'ThreadPoolExecutor' at 0x116903760>, <_queue.SimpleQueue object at 0x116915040>, None, ())
    │    │        └ <Thread(ThreadPoolExecutor-0_4, started daemon 123145521741824)>
    │    └ <function _worker at 0x1168f7790>
    └ <Thread(ThreadPoolExecutor-0_4, started daemon 123145521741824)>
  File "/usr/local/Cellar/python@3.8/3.8.4/Frameworks/Python.framework/Versions/3.8/lib/python3.8/concurrent/futures/thread.py", line 80, in _worker
    work_item.run()
    │         └ <function _WorkItem.run at 0x1168f78b0>
    └ <concurrent.futures.thread._WorkItem object at 0x120a08ac0>
> File "/usr/local/Cellar/python@3.8/3.8.4/Frameworks/Python.framework/Versions/3.8/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
             │    │   │    │       │    └ {}
             │    │   │    │       └ <concurrent.futures.thread._WorkItem object at 0x120a08ac0>
             │    │   │    └ [functools.partial(<function get_haiguans at 0x11680c9d0>, db=<sqlalchemy.orm.session.Session object at 0x120a08190>)]
             │    │   └ <concurrent.futures.thread._WorkItem object at 0x120a08ac0>
             │    └ <built-in method run of Context object at 0x12a96a1c0>
             └ <concurrent.futures.thread._WorkItem object at 0x120a08ac0>

  File "/Users/renchao/Documents/flm_workspace/mid/app/routers/haiguan.py", line 44, in get_haiguans
    return formate_response(r[0],r[1],r[2])
           │                │    │    └ (500, OperationalError('(mysql.connector.errors.OperationalError) MySQL Connection not available.'), 'Exception in all_haiguan')
           │                │    └ (500, OperationalError('(mysql.connector.errors.OperationalError) MySQL Connection not available.'), 'Exception in all_haiguan')
           │                └ (500, OperationalError('(mysql.connector.errors.OperationalError) MySQL Connection not available.'), 'Exception in all_haiguan')
           └ <function formate_response at 0x109d9bee0>

  File "/Users/renchao/Documents/flm_workspace/mid/app/utils/pycode.py", line 8, in formate_response
    return JSONResponse(
           └ <class 'starlette.responses.JSONResponse'>

  File "/usr/local/lib/python3.8/site-packages/starlette/responses.py", line 49, in __init__
    self.body = self.render(content)
    │           │    │      └ {'code': 500, 'message': 'Exception in all_haiguan', 'data': OperationalError('(mysql.connector.errors.OperationalError) MySQ...
    │           │    └ <function JSONResponse.render at 0x109806af0>
    │           └ <starlette.responses.JSONResponse object at 0x1252066d0>
    └ <starlette.responses.JSONResponse object at 0x1252066d0>

  File "/usr/local/lib/python3.8/site-packages/starlette/responses.py", line 157, in render
    return json.dumps(
           │    └ <function dumps at 0x108a55e50>
           └ <module 'json' from '/usr/local/Cellar/python@3.8/3.8.4/Frameworks/Python.framework/Versions/3.8/lib/python3.8/json/__init__....

  File "/usr/local/Cellar/python@3.8/3.8.4/Frameworks/Python.framework/Versions/3.8/lib/python3.8/json/__init__.py", line 234, in dumps
    return cls(
           └ <class 'json.encoder.JSONEncoder'>
  File "/usr/local/Cellar/python@3.8/3.8.4/Frameworks/Python.framework/Versions/3.8/lib/python3.8/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
             │    │          └ {'code': 500, 'message': 'Exception in all_haiguan', 'data': OperationalError('(mysql.connector.errors.OperationalError) MySQ...
             │    └ <function JSONEncoder.iterencode at 0x108a55dc0>
             └ <json.encoder.JSONEncoder object at 0x125206b80>
  File "/usr/local/Cellar/python@3.8/3.8.4/Frameworks/Python.framework/Versions/3.8/lib/python3.8/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
           │           └ {'code': 500, 'message': 'Exception in all_haiguan', 'data': OperationalError('(mysql.connector.errors.OperationalError) MySQ...
           └ <_json.Encoder object at 0x12c106c40>
  File "/usr/local/Cellar/python@3.8/3.8.4/Frameworks/Python.framework/Versions/3.8/lib/python3.8/json/encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '

TypeError: Object of type OperationalError is not JSON serializable
2021-03-05 at 09:13:52 | INFO | call once
2021-03-05 at 09:17:42 | INFO | call once
2021-03-05 at 09:17:43 | INFO | call once
2021-03-05 at 09:18:50 | INFO | call once
2021-03-05 at 09:18:58 | INFO | call once
2021-03-05 at 09:19:19 | INFO | call once
2021-03-05 at 09:21:05 | INFO | call once
2021-03-05 at 09:22:02 | INFO | call once
2021-03-05 at 09:22:03 | INFO | call once
2021-03-05 at 14:23:04 | INFO | call once
2021-03-05 at 14:23:18 | INFO | call once
2021-03-05 at 14:23:22 | INFO | call once
2021-03-05 at 14:23:33 | INFO | call once
2021-03-05 at 14:23:43 | INFO | call once
2021-03-05 at 14:23:49 | INFO | call once
2021-03-05 at 14:23:50 | INFO | call once
2021-03-05 at 14:24:01 | INFO | call once
2021-03-05 at 14:24:05 | INFO | call once
2021-03-05 at 14:24:10 | INFO | call once
2021-03-05 at 16:55:49 | INFO | call once
